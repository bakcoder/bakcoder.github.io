{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","categories":["All","Java","일상"],"edges":[{"node":{"id":"152334ad-37da-5a2c-b794-322d31bb7178","excerpt":"🔔 목표 public 생성자가 아닌 정적 팩터리 메서드를 통해 객체를 반환하는 기법을 익히자 정적 팩터리 메서드란? 란 인스턴스를 얻는 전통적인 수단인 public 생성자가 아닌\n하여 해당 클래스의 인스턴스를 반환하는 기법이다. 정적 팩터리 메서드의 장단점 장점 이름을 가질 수 있다.(동일한 시그니처의 생성자는 두개 가질 수 없다.) 호출될 때마다 인스턴트를 새로 생성하지 않아도 된다.(Boolean.valueOf) 반환 타입의 하위 타입 객체를 반환할 수 있는 능력이 있다.(인터페이스 기반 프레임워크, 인터페이스에 정적 메소드) 입력 매개변수에 따라 매번 다른 클래스의 객체를 반환할 수 있다.(EnumSet) 정적 팩터리 메서드를 작성하는 시점에는 반환할 객체의 클래스가 존재하지 않아도 된다. (서비스 제공자 프레임워크) 단점 상속을 하려면 public이나 protected 생성자가 필요하니 정적 팩터리 메서드만 제공하면 하위 클래스를 만들 수 없다. 정적 팩터리 메서드는 프로그…","fields":{"slug":"/bakcoder-java-study/effective-java-item1/"},"frontmatter":{"categories":"Java","title":"이펙티브 자바-Item 1. 생성자 대신 정적 팩터리 메서드를 고려하라.","date":"October 27, 2022"}},"next":{"fields":{"slug":"/bakcoder-daily-life/"}},"previous":null},{"node":{"id":"149b74d1-bcd6-5c5b-9df4-91175d392141","excerpt":"드디어 시작되었다. 나도 개발 블로그..? 항상 미뤄왔었다. \n개발 공부는 꾸준함이 중요하다고 생각했고 내가 공부했던 지식들을 블로그를 통해 꾸준히 정리하면\n나는 한층 더 성장할 것이라 생각했지만…\n행동력이 부족한지라 미뤄왔었다. 그래도 이제라도 시작하게 된 것을 다행으로 여기며 최대한 부지런하게 게시물을 찍어내려 한다.\n(잘할 수 있겠지? ㅎㅎ) 블로그를 해야겠다는 생각을 하게 되면서 티스토리, 네이버, 깃헙 등 여러 블로그 서비스를 찾아보았지만\n가장 개발자스러운 것을 찾다보니 깃헙 블로그로 개설하게 되었다. (커밋 잔디도 늘릴 겸 좋은 것 같다.) 템플릿은 줌코딩 님의 gatsby 템플릿이 너무 깔끔하고 맘에 들어 선택…(감사합니다🙇‍♂️) 아무튼 블로그를 통해 높이 성장하길 바라며 오늘은 짧게… 이만✋","fields":{"slug":"/bakcoder-daily-life/"},"frontmatter":{"categories":"일상","title":"블로그를 시작하며","date":"September 08, 2021"}},"next":null,"previous":{"fields":{"slug":"/bakcoder-java-study/effective-java-item1/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}